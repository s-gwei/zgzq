<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.P2020052.mapper.PlanOTMapper">
    <!-- 任务执行查询映射结果 -->
    <resultMap id="TaseResultMap" type="org.jeecg.modules.P2020052.pojo.PlanOTVo">
        <!--        colum对应数据库的字段,property对应实体类的属性-->
        <result column="plan_activity_ref_id" property="plan_activity_ref_id"/>
        <result column="code" property="code"/>
        <result column="description" property="description"/>
        <result column="deviation_report" property="deviation_report"/>
        <result column="difficulty_report" property="difficulty_report"/>
        <result column="breadth" property="breadth"/>
        <result column="criticiailty" property="criticiailty"/>
        <result column="standard_deviation_value" property="standard_deviation_value"/>
        <result column="standard_difficulty_value" property="standard_difficulty_value"/>
    </resultMap>



    <resultMap id="InResultMap" type="org.jeecg.modules.P2020052.pojo.PlanINVo">
        <!--        colum对应数据库的字段,property对应实体类的属性-->
        <result column="plan_activity_ref_id" property="plan_activity_ref_id"/>
        <result column="code" property="code"/>
        <result column="weights" property="weights"/>
        <result column="is_deleted" property="is_deleted"/>
        <result column="is_persisted" property="is_persisted"/>
        <result column="update_count" property="update_count"/>
        <result column="description" property="description"/>
        <result column="ot_rating" property="ot_rating"/>


    </resultMap>

    <resultMap id="GroupResultMap" type="org.jeecg.modules.P2020052.pojo.GroupVo">
        <!--        colum对应数据库的字段,property对应实体类的属性-->
        <result column="plan_activity_ref_id" property="plan_activity_ref_id"/>
        <result column="name" property="name"/>

    </resultMap>


    <resultMap id="RiskResultMap" type="org.jeecg.modules.P2020052.pojo.RiskVo">
        <!--        colum对应数据库的字段,property对应实体类的属性-->

        <result column="risk_name" property="riskName"/>
        <result column="id" property="id"/>
        <result column="create_Stamp" property="createStamp"/>
        <result column="risk_description" property="riskDescription"/>
        <result column="userName" property="userName"/>
        <result column="name" property="name"/>
        <result column="precaution" property="precaution"/>
        <result column="group_name" property="groupName"/>
        <result column="user_name" property="user_name"/>
    </resultMap>


       <!-- 工作任务延期报表-->
    <resultMap id="BaseResultMap" type="org.jeecg.modules.P2020052.pojo.PiplanActivityVo">
        <result column="activityId" property="activityId"/>
        <result column="activityName" property="activityName"/>
        <result column="targetStartTime" property="targetStartTime"/>
        <result column="byTime" property="byTime"/>
        <result column="expectedFinishTime" property="expectedFinishTime"/>
        <result column="actualStartTime" property="actualStartTime"/>
        <result column="actualEndTime" property="actualEndTime"/>
    </resultMap>



    <!-- 问题风险链报表-->
    <resultMap id="CaseResultMap" type="org.jeecg.modules.P2020052.pojo.ProblemRickChainVo">
        <result column="id" property="id"/>
        <result column="risk_name" property="risk_name"/>
        <result column="confirm_status" property="confirm_status"/>
        <result column="risk_to_type" property="risk_to_type"/>
        <result column="risk_code" property="risk_code"/>
        <result column="risk_description" property="risk_description"/>
        <result column="pid" property="pid"/>
        <result column="childrenId" property="childrenId"/>
    </resultMap>

    <!--           <if test="startTime!= null and startTime !=''" >-->
    <!--              and  pa.actual_start_date between  #{startTime}  and #{endTime}-->
    <!--           </if>-->

    <select id="OTTable" resultMap="TaseResultMap">
          SELECT
                 *
            FROM
                stproject_instanceotindicator ot,
                piplan_activity  pa
            WHERE
                pa.id = ot.plan_activity_ref_id
            <if test="planId!= null and planId !='' and planId !='null'" >
                and   pa.root_ref_id =#{planId}
            </if>

               and ot.plan_activity_ref_id IN (
            SELECT DISTINCT
                ( pa.plannable_ref_id )
            FROM
                piresource_assignment pa
            WHERE
                pa.rsrc_ref_id IN (
            SELECT
                piresource.id
            FROM
                piresource
            WHERE
                piresource.user_ref_id IN ( SELECT DISTINCT ( ml.rolebobject_id ) FROM membership_link ml, pigroup WHERE pigroup.id = ml.roleaobject_id
      <if test="group!= null and group !=''" >
              and pigroup.id  in
              <foreach item="id"  collection="group"
                       open="(" separator="," close=")">
                  #{id}
              </foreach>
          </if>
                )
                )
                )
    </select>


    <select id="exportOTExcel" resultMap="TaseResultMap">
        SELECT
        *
        FROM
        stproject_instanceotindicator ot,
        piplan_activity  pa
        WHERE
        pa.id = ot.plan_activity_ref_id
        <if test="startTime!= null and startTime !=''" >
            and  pa.actual_start_date between  #{startTime}  and #{endTime}
        </if>
        and ot.plan_activity_ref_id IN (
        SELECT DISTINCT
        ( pa.plannable_ref_id )
        FROM
        piresource_assignment pa
        WHERE
        pa.rsrc_ref_id IN (
        SELECT
        piresource.id
        FROM
        piresource
        WHERE
        piresource.user_ref_id IN ( SELECT DISTINCT ( ml.rolebobject_id ) FROM membership_link ml, pigroup WHERE pigroup.id = ml.roleaobject_id
        <if test="group!= null and group !=''" >
            and pigroup.id  in
            <foreach item="id"  collection="group"
                     open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        )
        )
        )
    </select>


    <select id="selectGroup" resultMap="GroupResultMap">
            select id,name from pigroup
    </select>



    <select id="selectINTable" resultMap="InResultMap">
        SELECT
        sin.*,
        strating.description,strating.ot_rating
        FROM
        stproject_instanceinindicator sin,
        piplan_activity  pa,
        strating
        WHERE
        sin.id = strating.in_indicator_ref_id
        and
        pa.id = sin.plan_activity_ref_id
        <if test="planId!= null and planId !='' and planId !='null'" >
            and   pa.root_ref_id =#{planId}
        </if>
        <if test="startTime!= null and startTime !=''" >
            and  pa.actual_start_date between  #{startTime}  and #{endTime}
        </if>
        and sin.plan_activity_ref_id IN (
        SELECT DISTINCT
        ( pa.plannable_ref_id )
        FROM
        piresource_assignment pa
        WHERE
        pa.rsrc_ref_id IN (
        SELECT
        piresource.id
        FROM
        piresource
        WHERE
        piresource.user_ref_id IN ( SELECT DISTINCT ( ml.rolebobject_id ) FROM membership_link ml, pigroup WHERE pigroup.id = ml.roleaobject_id
      <if test="group!= null and group !=''" >
            and pigroup.id   in
            <foreach item="id"  collection="group"
                     open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        )
        )
        )
    </select>




    <select id="exportINExcel" resultMap="InResultMap">
        SELECT
        sin.*
        FROM
        stproject_instanceinindicator sin,
        piplan_activity  pa
        WHERE
        pa.id = sin.plan_activity_ref_id
        <if test="planId!= null and planId !=''" >
            and  sin.plan_activity_ref_id =#{planId}
        </if>
        <if test="startTime!= null and startTime !=''" >
            and  pa.actual_start_date between  #{startTime}  and #{endTime}
        </if>
        and sin.plan_activity_ref_id IN (
        SELECT DISTINCT
        ( pa.plannable_ref_id )
        FROM
        piresource_assignment pa
        WHERE
        pa.rsrc_ref_id IN (
        SELECT
        piresource.id
        FROM
        piresource
        WHERE
        piresource.user_ref_id IN ( SELECT DISTINCT ( ml.rolebobject_id ) FROM membership_link ml, pigroup WHERE pigroup.id = ml.roleaobject_id
        <if test="group!= null and group !=''" >
            and pigroup  in
            <foreach item="id"  collection="group"
                     open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        )
        )
        )
    </select>



    <select id="selectRiskProject" resultMap="RiskResultMap">
        SELECT
        *
        FROM
        (
        SELECT
        str.risk_name,
        str.create_stamp,
        str.risk_description,
        str.id,
        b.NAME AS userName
        FROM
        stproject_risk str
        LEFT JOIN ( SELECT id, NAME FROM piuser WHERE id IN ( SELECT identified_by_ref_id FROM stproject_risk ) ) b ON str.creator_ref_id = b.id
        <where>
            <if test="projectId!= null and projectId !=''" >
                str.project_ref_id = #{projectId}
            </if>
            <if test="startTime!= null and startTime !=''" >
                and  str.create_stamp between  #{startTime}  and #{endTime}
            </if>
        </where>
        ) d
        LEFT JOIN (
        SELECT
        piuser.NAME AS user_name,
        c.group_name,
        stproject_measures.NAME,
        stproject_measures.precaution,
        stproject_measures.project_risk_ref_id
        FROM
        stproject_measures
        LEFT JOIN ( SELECT NAME AS group_name, id FROM pigroup WHERE id IN ( SELECT involve_group_reference_id FROM stproject_measures ) ) c ON stproject_measures.involve_group_reference_id = c.id
        LEFT JOIN piuser ON stproject_measures.creator_ref_id = piuser.id
        ) e ON d.id = e.project_risk_ref_id




    </select>


    <select id="selectRiskByPlan" resultMap="RiskResultMap">
           SELECT
                b.*,
                a.risk_name
            FROM
                (
            SELECT
                sr.id,
                sr.risk_name
            FROM
                stproject_risk sr
            WHERE
                sr.id IN ( SELECT sarl.rolebobject_id FROM stpiplan_activity_risk_link sarl, piplan WHERE piplan.id = sarl.root_ref_id
                    <if test="planId!= null and planId !=''" >
                        and piplan.id  = #{planId}
                    </if>
                )
                ) a
                LEFT JOIN (
            SELECT
                *
            FROM
                stproject_measures sm
            WHERE
                project_risk_ref_id IN ( SELECT sarl.rolebobject_id FROM stpiplan_activity_risk_link sarl, piplan WHERE piplan.id = sarl.root_ref_id
                        <if test="planId!= null and planId !=''" >
                            and piplan.id  = #{planId}
                        </if>
                )
                ) b ON a.id = b.project_risk_ref_id

    </select>

    <select id="WorkDelayTable" resultMap="BaseResultMap">
                SELECT
                    pa.id AS activityId,
                    pa.NAME AS activityName,
                    pa.target_start_date AS targetStartTime,
                    pa.target_end_date AS byTime,
                    a.expected_finish_time AS expectedFinishTime,
                    pa.actual_end_date AS actualEndTime,
                    pa.actual_start_date AS actualStartTime
                FROM
                    piplan_activity pa
                    LEFT JOIN (
                SELECT
                    t.t1id AS plan_activity_ref_id,
                    t.expected_finish_time
                FROM
                    (
                SELECT
                    t2.*,
                    t1.plan_activity_ref_id AS t1id
                FROM
                    stexpected_finish_time t1
                    LEFT JOIN stexpected_finish_time t2 ON t1.plan_activity_ref_id = t2.plan_activity_ref_id
                HAVING
                    1
                ORDER BY
                    t2.expected_finish_time DESC
                    ) t
                GROUP BY
                    t.t1id
                    ) a ON pa.id = a.plan_activity_ref_id
                WHERE 1=1
        <if test="projectId!= null and projectId !=''" >
            and pa.project_ref_id  = #{projectId}

        </if>
        <if test="startTime!= null and startTime !=''" >
            and pa.target_start_date between  #{startTime}  and #{endTime}
        </if>

                     and pa.id in
					( SELECT
        plannable_ref_id
        FROM
        piresource_assignment
        WHERE
        piresource_assignment.rsrc_ref_id IN (
        SELECT
        id
        FROM
        piresource
        WHERE
        piresource.user_ref_id IN ( SELECT DISTINCT ( ml.rolebobject_id ) FROM membership_link ml, pigroup WHERE pigroup.id = ml.roleaobject_id
        <if test="group!= null and group !='' and group != 'null'" >
            and pigroup.id  in
            <foreach item="id"  collection="group"
                     open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        )
        )
        )

    </select>

    <select id="problemRickChain" resultMap="CaseResultMap">
        SELECT
        spr.id,
        spr.risk_name,
        spr.risk_code,
        spr.risk_to_type,
        spr.confirm_status,
        spr.risk_description,
        srprl.roleaobject_id as pid,
        srprl.rolebobject_id as childrenId
        from stproject_risk spr left join stproject_risk_pre_risk_link srprl on
        spr.id=srprl.roleaobject_id

    </select>


    <select id="selectPid" resultMap="CaseResultMap">
        SELECT
        id
        FROM
        stproject_risk a
        <where>
        a.id NOT IN ( SELECT spr.id FROM stproject_risk spr, stproject_risk_pre_risk_link srprl WHERE spr.id = srprl.rolebobject_id )

        </where>
    </select>

</mapper>